#!/usr/bin/env bash
#LOCATION OF THIS SCRIPT
ROOT=/var/opt/hermes-ci
#source enviorment vars
source "$ROOT"/app/env.conf
#source function file
source "$ROOT"/app/functions.sh
ACTION=$1
#shorthand options
optsetshort=a:r:b:sS:t:hu:g:f:T:v
#longhad options
optsetlong=account:,repo:,branch:,ssh,src:,target:,help,report,user:,group:,auto,save,bitbucket,service:,afterinstall:,beforeinstall:,config:,filename:,token:,tag:,version
if ! options=$(getopt -o $optsetshort -l $optsetlong -- "$@")
then 
	exit 1
fi
eval set -- $options
while [ $# -gt 0 ]
do
	case $1 in
	-h|--help) cat "$ROOT"/app/hermes.man; echo "" ; exit;;
	-a|--account) ACCOUNT="$2" ; shift;;
	-r|--repo) REPO=$2 ; shift;;
	-b|--branch) BRANCH=$2 ; shift;;
	-s|--ssh) TYPE=ssh;;
	-S|--src) SOURCE=$2 ; shift;;
	-t|--target) TARGET=$2 ; shift;;
	-u|--user) HERMESUSER=$2 ; shift;;
	-g|--group) GROUP=$2 ; shift;;
	-f|--filename) FILENAME=$2 ; shift;;
	-T|--tag) TAG=$2 ; shift;;
	-v|--version) echo $H_VERSION; exit;;
	--service) SERVICE=$2 ; shift;;
	--bitbucket) SERVICE="BIT";;
	--auto) AUTO=1; SAVE=1;;
	--save) SAVE=1;;
	--report) REPORT="$2" ; shift;;
	--afterinstall) AFTERINSTALL=$2 ; shift;;
	--beforeinstall) BEFOREINSTALL=$2 ;shift;;
	--config) CONFIG=$2 ; shift;;
	--token) TOKEN=$2 ; shift;;
	esac
	shift
done
case $ACTION in
	update) source $ROOT/app/modules/update.sh;;
	keygen) 
		if [ "$REPO" != "" ] && [ "$ACCOUNT" != "" ]
		then
			source "$ROOT"/app/keygen.sh 
			exit;
		fi;;
	sshconfig)
		/bin/bash "$ROOT"/app/modules/ssh-startup.sh $KEYS $ROOT/app/modules/ssh-agent.conf;
		exit;;
	deploy)
		#Check if --config flag was passed as account-repo-tag
		if [[ $CONFIG != 0 ]]
		then
			#Load existing config file if it exists
			echo "config file was passed"
			#run deployment script using config file
			if [ -f $DEPLOYMENTCONFIG/$CONFIG.deployment.json ] && [ "$TAG" != "" ]
			then
				configfile=$DEPLOYMENTCONFIG/$CONFIG.deployment.json
				source $ROOT/app/jq.sh
			else
				if [ "$TAG" = "" ]
				then
					echo "No deployment tag was passed. Unclear what deployment to run"
				else
					echo "No configuration file exists @ $DEPLOYMENTCONFIG/$CONFIG.deployment.json"
				fi
				exit;
			fi
		fi;;
	auth)
		echo "saving token for $SERVICE"
		echo "$TOKEN" > $KEYS/"$SERVICE"-token.txt
		exit;;
esac
#Check if the required parameters are set.
if [ "$ACCOUNT" != "" ] && [ "$REPO" != "" ]
then
	#If we are either just saving or automating the configuration
	if [ $SAVE = 1 ] && [ "$TAG" != "" ]
	then
		echo "Saving config"
		source "$ROOT"/app/setup.sh
		if [ "$AUTO" = 1 ]
		then
			if [ "$TAG" != "" ]
			then
				cronjob=$(cat /etc/cron.d/hermes-ci | grep -e "$ACCOUNT-$REPO --tag $TAG")
				echo $cronjob
				if [ "$cronjob" = "" ]
				then
					echo "*/2 * * * * root hermes-ci deploy --config $ACCOUNT-$REPO --tag $TAG" >> $CRONFILE
				else
					echo "Auto deploy is already set up for $ACCOUNT-$REPO with $TAG tag" 2>&1 | tee -a "$LOGS/$ACCOUNT"_"$REPO"
				fi
			else
				echo "Setting Hermes for automatic deployment requires a 'Tag' [-T|--tag]"
			fi
		fi
	else
		if [ $SAVE = 1 ] && [ "$TAG" = "" ]
		then
			echo "No deployment tag was passed. Cannot save deployment configuration without default deployment tag" 2>&1 | tee -a "$LOGS/$ACCOUNT"_"$REPO" 
		fi
		echo ""
	fi
	#Run the deployment
	source "$ROOT"/app/modules/deployment.sh
else
	usage
	if [ "$ACCOUNT" = "" ]
	then
		echo "Error: missing arg <-a|--account>"
	fi
	if [ "$REPO" = "" ]
	then
		echo "Error: missing arg <-r|--repo>"
	fi
fi